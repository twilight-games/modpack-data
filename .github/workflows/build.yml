---
name: Build modpacks
on: push
jobs:
  index-modpacks:
    name: Generate matrix based on available modpacks
    runs-on: ubuntu-latest
    outputs:
      modpacks: ${{ steps.list-modpacks.outputs.modpacks }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: list-modpacks
        name: List modpacks
        run: echo modpacks=$(cat modpacks.json) >> $GITHUB_OUTPUT
  build-modpack:
    needs: index-modpacks
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.index-modpacks.outputs.modpacks).modpacks }}
    name: Build ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - name: Setup packwiz
        run: go install github.com/packwiz/packwiz@latest
      - name: Refresh packwiz index
        run: packwiz refresh
        working-directory: ${{ matrix.id }}
      - name: Build modpack
        run: packwiz modrinth export --restrictDomains=false --output $OUTPUT
        working-directory: ${{ matrix.id }}
        env:
          OUTPUT: ${{ matrix.id }}.mrpack
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.id }}
          path: "${{ matrix.id }}/*.mrpack"
          if-no-files-found: error
  deploy:
    needs: build-modpack
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download modpacks
        uses: actions/download-artifact@v3
        with:
          path: ../modpacks
      - name: Move modpacks to working directory
        run: find ../modpacks/* -name '*.mrpack' -exec cp {} . \;
      - name: Push to branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[CI] Automated modpack build"
          branch: build
          create_branch: true


      